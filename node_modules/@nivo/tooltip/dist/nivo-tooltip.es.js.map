{"version":3,"file":"nivo-tooltip.es.js","sources":["../src/TooltipWrapper.tsx","../src/Chip.tsx","../src/BasicTooltip.tsx","../src/TableTooltip.tsx","../src/CrosshairLine.tsx","../src/Crosshair.tsx","../src/context.ts","../src/hooks.ts","../src/Tooltip.tsx","../src/TooltipProvider.tsx"],"sourcesContent":["import { memo, useRef, PropsWithChildren, CSSProperties } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport {\n    useTheme,\n    useMotionConfig,\n    // @ts-ignore\n    useMeasure,\n} from '@nivo/core'\nimport { TooltipStateContextDataVisible } from './context'\n\nconst TOOLTIP_OFFSET = 14\n\nconst tooltipStyle = {\n    pointerEvents: 'none' as CSSProperties['pointerEvents'],\n    position: 'absolute' as CSSProperties['position'],\n    zIndex: 10,\n    top: 0,\n    left: 0,\n}\n\nconst translate = (x: number, y: number) => `translate(${x}px, ${y}px)`\n\ninterface TooltipWrapperProps {\n    position: TooltipStateContextDataVisible['position']\n    anchor: TooltipStateContextDataVisible['anchor']\n}\n\nexport const TooltipWrapper = memo<PropsWithChildren<TooltipWrapperProps>>(\n    ({ position, anchor, children }) => {\n        const theme = useTheme()\n        const { animate, config: springConfig } = useMotionConfig()\n        const [measureRef, bounds] = useMeasure()\n        const previousPosition = useRef<[number, number] | false>(false)\n\n        let to = undefined\n        let immediate = false\n        const hasDimension = bounds.width > 0 && bounds.height > 0\n\n        let x = Math.round(position[0])\n        let y = Math.round(position[1])\n\n        if (hasDimension) {\n            if (anchor === 'top') {\n                x -= bounds.width / 2\n                y -= bounds.height + TOOLTIP_OFFSET\n            } else if (anchor === 'right') {\n                x += TOOLTIP_OFFSET\n                y -= bounds.height / 2\n            } else if (anchor === 'bottom') {\n                x -= bounds.width / 2\n                y += TOOLTIP_OFFSET\n            } else if (anchor === 'left') {\n                x -= bounds.width + TOOLTIP_OFFSET\n                y -= bounds.height / 2\n            } else if (anchor === 'center') {\n                x -= bounds.width / 2\n                y -= bounds.height / 2\n            }\n\n            to = {\n                transform: translate(x, y),\n            }\n\n            if (!previousPosition.current) {\n                immediate = true\n            }\n\n            previousPosition.current = [x, y]\n        }\n\n        const animatedProps = useSpring<{\n            transform: string\n        }>({\n            to,\n            config: springConfig,\n            immediate: !animate || immediate,\n        })\n\n        const style = {\n            ...tooltipStyle,\n            ...theme.tooltip,\n            transform: animatedProps.transform ?? translate(x, y),\n        }\n\n        return (\n            <animated.div ref={measureRef} style={style}>\n                {children}\n            </animated.div>\n        )\n    }\n)\n\nTooltipWrapper.displayName = 'TooltipWrapper'\n","import { CSSProperties, memo } from 'react'\n\ninterface ChipProps {\n    size?: number\n    color: string\n    style?: CSSProperties\n}\n\nexport const Chip = memo<ChipProps>(({ size = 12, color, style = {} }) => (\n    <span style={{ display: 'block', width: size, height: size, background: color, ...style }} />\n))\n","import { memo, ReactNode } from 'react'\nimport { useTheme, ValueFormat, useValueFormatter } from '@nivo/core'\nimport { Chip } from './Chip'\n\nexport interface BasicTooltipProps {\n    id: ReactNode\n    value?: number | string | Date\n    format?: ValueFormat<number | string | Date>\n    color?: string\n    enableChip?: boolean\n    /**\n     * @deprecated This should be replaced by custom tooltip components.\n     */\n    renderContent?: () => JSX.Element\n}\n\nexport const BasicTooltip = memo<BasicTooltipProps>(\n    ({ id, value: _value, format, enableChip = false, color, renderContent }) => {\n        const theme = useTheme()\n        const formatValue = useValueFormatter<number | string | Date>(format)\n\n        let content: JSX.Element\n        if (typeof renderContent === 'function') {\n            content = renderContent()\n        } else {\n            let value = _value\n            if (formatValue !== undefined && value !== undefined) {\n                value = formatValue(value)\n            }\n            content = (\n                <div style={theme.tooltip.basic}>\n                    {enableChip && <Chip color={color!} style={theme.tooltip.chip} />}\n                    {value !== undefined ? (\n                        <span>\n                            {id}: <strong>{`${value}`}</strong>\n                        </span>\n                    ) : (\n                        id\n                    )}\n                </div>\n            )\n        }\n\n        return <div style={theme.tooltip.container}>{content}</div>\n    }\n)\n","import { CSSProperties, memo, ReactNode } from 'react'\nimport { useTheme } from '@nivo/core'\n\nconst tableStyle = {\n    width: '100%',\n    borderCollapse: 'collapse' as CSSProperties['borderCollapse'],\n}\n\ninterface TableTooltipProps {\n    title?: ReactNode\n    renderContent?: () => JSX.Element\n    rows?: ReactNode[][]\n}\n\nexport const TableTooltip = memo(({ title, rows = [], renderContent }: TableTooltipProps) => {\n    const theme = useTheme()\n\n    if (!rows.length) return null\n\n    let content\n    if (typeof renderContent === 'function') {\n        content = renderContent()\n    } else {\n        content = (\n            <div>\n                {title && title}\n                <table style={{ ...tableStyle, ...theme.tooltip.table }}>\n                    <tbody>\n                        {rows.map((row, i) => (\n                            <tr key={i}>\n                                {row.map((column, j) => (\n                                    <td key={j} style={theme.tooltip.tableCell}>\n                                        {column}\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    return <div style={theme.tooltip.container}>{content}</div>\n})\n\nTableTooltip.displayName = 'TableTooltip'\n","import { CSSProperties, memo, useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\ninterface CrosshairLineProps {\n    x0: number\n    x1: number\n    y0: number\n    y1: number\n}\n\nexport const CrosshairLine = memo(({ x0, x1, y0, y1 }: CrosshairLineProps) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n    const style = useMemo(\n        () => ({\n            ...theme.crosshair.line,\n            pointerEvents: 'none' as CSSProperties['pointerEvents'],\n        }),\n        [theme.crosshair.line]\n    )\n\n    const animatedProps = useSpring({\n        x1: x0,\n        x2: x1,\n        y1: y0,\n        y2: y1,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return <animated.line {...animatedProps} fill=\"none\" style={style} />\n})\n\nCrosshairLine.displayName = 'CrosshairLine'\n","import { memo } from 'react'\nimport { CrosshairLine } from './CrosshairLine'\nimport { CrosshairType } from './types'\n\ninterface CrosshairProps {\n    width: number\n    height: number\n    type: CrosshairType\n    x: number\n    y: number\n}\n\nexport const Crosshair = memo(({ width, height, type, x, y }: CrosshairProps) => {\n    let xLine\n    let yLine\n    if (type === 'cross') {\n        xLine = { x0: x, x1: x, y0: 0, y1: height }\n        yLine = { x0: 0, x1: width, y0: y, y1: y }\n    } else if (type === 'top-left') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'top') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n    } else if (type === 'top-right') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'right') {\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'bottom-right') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'bottom') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n    } else if (type === 'bottom-left') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'left') {\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'x') {\n        xLine = { x0: x, x1: x, y0: 0, y1: height }\n    } else if (type === 'y') {\n        yLine = { x0: 0, x1: width, y0: y, y1: y }\n    }\n\n    return (\n        <>\n            {xLine && <CrosshairLine x0={xLine.x0} x1={xLine.x1} y0={xLine.y0} y1={xLine.y1} />}\n            {yLine && <CrosshairLine x0={yLine.x0} x1={yLine.x1} y0={yLine.y0} y1={yLine.y1} />}\n        </>\n    )\n})\n\nCrosshair.displayName = 'Crosshair'\n","import { createContext, MouseEvent } from 'react'\nimport { TooltipAnchor } from './types'\n\nexport interface TooltipActionsContextData {\n    showTooltipAt: (\n        content: JSX.Element,\n        position: [number, number],\n        anchor?: TooltipAnchor\n    ) => void\n    showTooltipFromEvent: (content: JSX.Element, event: MouseEvent, anchor?: TooltipAnchor) => void\n    hideTooltip: () => void\n}\n\nconst defaultActions: TooltipActionsContextData = {\n    showTooltipAt: () => {},\n    showTooltipFromEvent: () => {},\n    hideTooltip: () => {},\n}\n\nexport const TooltipActionsContext = createContext<TooltipActionsContextData>(defaultActions)\n\nexport interface TooltipStateContextDataVisible {\n    isVisible: true\n    position: [number, number]\n    content: JSX.Element\n    anchor: TooltipAnchor\n}\n\nexport interface TooltipStateContextDataHidden {\n    isVisible: false\n    position: [null, null]\n    content: null\n    anchor: null\n}\n\nexport type TooltipStateContextData = TooltipStateContextDataVisible | TooltipStateContextDataHidden\n\nexport const hiddenTooltipState: TooltipStateContextDataHidden = {\n    isVisible: false,\n    position: [null, null],\n    content: null,\n    anchor: null,\n}\n\nexport const TooltipStateContext = createContext<TooltipStateContextData>(hiddenTooltipState)\n","import { useState, useContext, useCallback, MutableRefObject, MouseEvent, useMemo } from 'react'\nimport {\n    TooltipActionsContext,\n    TooltipActionsContextData,\n    TooltipStateContext,\n    TooltipStateContextData,\n    hiddenTooltipState,\n} from './context'\nimport { TooltipAnchor } from './types'\n\nexport const useTooltipHandlers = (container: MutableRefObject<HTMLDivElement>) => {\n    const [state, setState] = useState<TooltipStateContextData>(hiddenTooltipState)\n\n    const showTooltipAt: TooltipActionsContextData['showTooltipAt'] = useCallback(\n        (content: JSX.Element, [x, y]: [number, number], anchor: TooltipAnchor = 'top') => {\n            setState({\n                isVisible: true,\n                position: [x, y],\n                anchor,\n                content,\n            })\n        },\n        [setState]\n    )\n\n    const showTooltipFromEvent: TooltipActionsContextData['showTooltipFromEvent'] = useCallback(\n        (content: JSX.Element, event: MouseEvent, anchor: TooltipAnchor = 'top') => {\n            const bounds = container.current.getBoundingClientRect()\n            const offsetWidth = container.current.offsetWidth\n            // In a normal situation mouse enter / mouse leave events\n            // capture the position ok. But when the chart is inside a scaled\n            // element with a CSS transform like: `transform: scale(2);`\n            // tooltip are not positioned ok.\n            // Comparing original width `offsetWidth` agains scaled\n            // width give us the scaling factor to calculate\n            // ok mouse position\n            const scaling = offsetWidth === bounds.width ? 1 : offsetWidth / bounds.width\n            const x = (event.clientX - bounds.left) * scaling\n            const y = (event.clientY - bounds.top) * scaling\n\n            if (anchor === 'left' || anchor === 'right') {\n                if (x < bounds.width / 2) anchor = 'right'\n                else anchor = 'left'\n            }\n\n            setState({\n                isVisible: true,\n                position: [x, y],\n                anchor,\n                content,\n            })\n        },\n        [container, setState]\n    )\n\n    const hideTooltip = useCallback(() => {\n        setState(hiddenTooltipState)\n    }, [setState])\n\n    const actions: TooltipActionsContextData = useMemo(() => {\n        return {\n            showTooltipAt,\n            showTooltipFromEvent,\n            hideTooltip,\n        }\n    }, [showTooltipAt, showTooltipFromEvent, hideTooltip])\n\n    return {\n        actions,\n        state,\n    }\n}\n\nexport const useTooltip = () => {\n    const context = useContext(TooltipActionsContext)\n    if (context === undefined) {\n        throw new Error('useTooltip must be used within a TooltipProvider')\n    }\n\n    return context\n}\n\nexport const useTooltipState = () => {\n    const context = useContext(TooltipStateContext)\n    if (context === undefined) {\n        throw new Error('useTooltipState must be used within a TooltipProvider')\n    }\n\n    return context\n}\n","import { useTooltipState } from './hooks'\nimport { TooltipWrapper } from './TooltipWrapper'\nimport { TooltipStateContextData, TooltipStateContextDataVisible } from './context'\n\nexport const isVisibleTooltipState = (\n    state: TooltipStateContextData\n): state is TooltipStateContextDataVisible => state.isVisible\n\nexport const Tooltip = () => {\n    const state = useTooltipState()\n\n    if (!isVisibleTooltipState(state)) {\n        return null\n    }\n\n    return (\n        <TooltipWrapper position={state.position} anchor={state.anchor}>\n            {state.content}\n        </TooltipWrapper>\n    )\n}\n","import { PropsWithChildren, MutableRefObject } from 'react'\nimport { TooltipActionsContext, TooltipStateContext } from './context'\nimport { useTooltipHandlers } from './hooks'\n\ninterface TooltipProviderProps {\n    container: MutableRefObject<HTMLDivElement>\n}\n\nexport const TooltipProvider = ({\n    container,\n    children,\n}: PropsWithChildren<TooltipProviderProps>) => {\n    const { actions, state } = useTooltipHandlers(container)\n\n    return (\n        <TooltipActionsContext.Provider value={actions}>\n            <TooltipStateContext.Provider value={state}>{children}</TooltipStateContext.Provider>\n        </TooltipActionsContext.Provider>\n    )\n}\n"],"names":["tooltipStyle","pointerEvents","position","zIndex","top","left","translate","x","y","TooltipWrapper","memo","_ref","_animatedProps$transf","anchor","children","theme","useTheme","_useMotionConfig","useMotionConfig","animate","springConfig","config","_useMeasure","useMeasure","measureRef","bounds","previousPosition","useRef","to","undefined","immediate","hasDimension","width","height","Math","round","transform","current","animatedProps","useSpring","style","_extends","tooltip","_jsx","animated","div","ref","displayName","Chip","_ref$size","size","color","_ref$style","display","background","BasicTooltip","content","id","_value","value","format","_ref$enableChip","enableChip","renderContent","formatValue","useValueFormatter","_jsxs","basic","chip","container","tableStyle","borderCollapse","TableTooltip","title","_ref$rows","rows","length","table","map","row","i","column","j","tableCell","CrosshairLine","x0","x1","y0","y1","useMemo","crosshair","line","x2","y2","fill","Crosshair","xLine","yLine","type","_Fragment","TooltipActionsContext","createContext","showTooltipAt","showTooltipFromEvent","hideTooltip","hiddenTooltipState","isVisible","TooltipStateContext","useTooltipHandlers","_useState","useState","state","setState","useCallback","event","getBoundingClientRect","offsetWidth","scaling","clientX","clientY","actions","useTooltip","context","useContext","Error","useTooltipState","isVisibleTooltipState","Tooltip","TooltipProvider","_useTooltipHandlers","Provider"],"mappings":"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"}